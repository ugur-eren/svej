generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid())
  username  String   @unique
  email     String   @unique
  fullname  String?
  password  String
  bio       String?
  active    Boolean  @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relations
  profilePhoto    Media?    @relation("ProfilePhoto", fields: [profilePhotoId], references: [id])
  profilePhotoId  String?
  coverPhoto      Media?    @relation("CoverPhoto", fields: [coverPhotoId], references: [id])
  coverPhotoId    String?
  tags            UserTag[] @relation("UserTags")
  followers       User[]    @relation("UserFollows")
  follows         User[]    @relation("UserFollows")
  posts           Post[]    @relation("UserPosts")
  postLikes       Post[]    @relation("PostLikes")
  postDislikes    Post[]    @relation("PostDislikes")
  comments        Comment[] @relation("UserComments")
  commentLikes    Comment[] @relation("CommentLikes")
  commentDislikes Comment[] @relation("CommentDislikes")
}

model Post {
  id          String   @id @default(uuid())
  description String?
  medias      Media[]
  active      Boolean  @default(true)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  // Relations
  author   User      @relation("UserPosts", fields: [authorId], references: [id])
  authorId String
  likes    User[]    @relation("PostLikes")
  dislikes User[]    @relation("PostDislikes")
  comments Comment[] @relation("PostComments")
}

model Comment {
  id        String   @id @default(uuid())
  text      String
  active    Boolean  @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relations
  author   User   @relation("UserComments", fields: [authorId], references: [id])
  authorId String
  post     Post   @relation("PostComments", fields: [postId], references: [id])
  postId   String
  likes    User[] @relation("CommentLikes")
  dislikes User[] @relation("CommentDislikes")
}

model UserTag {
  id        String   @id @default(uuid())
  icon      String
  name      String
  color     String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relations
  users User[] @relation("UserTags")
}

model Media {
  id        String    @id @default(uuid())
  type      MediaType
  url       String
  width     Int
  height    Int
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt

  // Relations
  profilePhoto User[]  @relation("ProfilePhoto")
  coverPhoto   User[]  @relation("CoverPhoto")
  post         Post?   @relation(fields: [postId], references: [id])
  postId       String?
}

enum MediaType {
  IMAGE
  VIDEO
}
